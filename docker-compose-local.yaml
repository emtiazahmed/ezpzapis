version: '3.8'

services:
  consul: # Service Discovery
    image: hashicorp/consul:latest
    container_name: consul
    ports:
      - "8400:8400"
      - "8500:8500"
      - "8600:8600"
    networks:
      ezpz-cluster:
    command: 'agent -server -bootstrap-expect=1 -ui -bind=0.0.0.0 -client=0.0.0.0'
  mongo-server: # NoSQL Datastore
    image: mongo:latest
    container_name: 'mongo-server'
    restart: always
    labels:
      org.springframework.boot.service-connection: mongo-server
    ports:
      - '27017:27017'
    volumes:
      - mongo:/data/db
    networks:
      ezpz-cluster:

  tempo: # Metrics
    image: grafana/tempo:2.2.2
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml:ro
      - ./docker/tempo/tempo-data:/tmp/tempo
    ports:
      - "3110:3100"  # Tempo
      - "9411:9411" # zipkin
    networks:
      ezpz-cluster:
  loki: # Log aggregator
    image: grafana/loki:2.9.2
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      ezpz-cluster:
  prometheus: # Metrics DB
    image: prom/prometheus:v2.46.0
    container_name: prometheus
    command:
      - --enable-feature=exemplar-storage
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      ezpz-cluster:
  grafana: # Dashboards
    image: grafana/grafana:10.1.0
    container_name: grafana
    volumes:
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    networks:
      ezpz-cluster:
  keycloak: # Identity Management System
    image: jboss/keycloak:latest
    restart: on-failure
    command:
      - "-b"
      - "0.0.0.0"
      - "-Dkeycloak.migration.action=import"
      - "-Dkeycloak.migration.provider=dir"
      - "-Dkeycloak.migration.dir=/config/"
      - "-Dkeycloak.migration.strategy=IGNORE_EXISTING"
    volumes:
      - ./config:/config/
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=password
      - DB_VENDOR=postgres
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_ADDR=keycloak-db
      - DB_PORT=5433
      - DB_DATABASE=keycloakdb
    ports:
      - "8090:8080"
    depends_on:
      - keycloak-db
    networks:
      ezpz-cluster:
  keycloak-db:
    image: postgres:16.0
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloakdb
    ports:
      - "5433:5433"
    command: -p 5433
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      ezpz-cluster:
networks:
  ezpz-cluster:
volumes:
  pgdata:
  mongo:
    driver:
      local